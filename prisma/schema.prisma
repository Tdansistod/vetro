// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Tenant {
  id   Int    @id @default(autoincrement())
  name String @unique
  branches Branch[]
  users User[]
}

model Branch {
  id        Int      @id @default(autoincrement())
  tenantId  Int
  name      String
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  userBranche UserBranch[]
}

model User {
  id          Int          @id @default(autoincrement())
  tenantId    Int
  username    String       @unique
  passwordHash String
  role        String
  createdBy   Int?
  createdAt   DateTime     @default(now())
  tenant      Tenant       @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  userBranch  UserBranch[]
}

model UserBranch {
  userId   Int
  branchId Int
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  branch   Branch @relation(fields: [branchId], references: [id], onDelete: Cascade)

  @@id([userId, branchId])
}

model File {
  id      String   @id @default(uuid())
  name    String
  header  String[]
  rows    String   // Guardamos las filas como JSON
  createdAt DateTime @default(now())
}